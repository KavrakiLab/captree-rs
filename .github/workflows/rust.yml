name: Rust

on:
  push:
    branches: ["master"]
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  test_nightly:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest
        toolchain:
          - nightly
        cargo_flags:
          - "--all-features"
          - "--no-default-features"
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true

      - name: Cache
        id: cache-restore
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --exclude bench ${{ matrix.cargo_flags }}

      - name: Save cache
        id: cache-save
        uses: actions/cache/save@v4
        if: always() && steps.cache-restore.cache-hit != 'true'
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}